@mixin arrow($width,$height,$borderWidth,$borderColor,$top,$right,$aim){
    display: block;
    content: "";
    width: $width + px;
    height: $height + px;
    border-top: ($borderWidth + px) solid $borderColor;
    border-right: ($borderWidth + px) solid $borderColor;
    position: absolute;
    top: $top + px;
    right: $right + px;

    @if $aim == 'top'{
        transform: rotate(-45deg);
    }
    @else if $aim == 'right'{
        transform: rotate(45deg);
    }
    @else if $aim == 'bottom'{
        transform: rotate(135deg);
    }
    @else if $aim == 'left'{
        transform: rotate(-135deg);
    }
}

@mixin rem($size, $base: 10) {
    font-size: $size + px;
    font-size: ($size / $base) + rem;
}

@mixin placeholder($color, $size) {
    &::placeholder {
        @extend %font_main;
        @include rem($size);
        color: $color;
    }
}

@mixin retina {
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 2dppx) {
        @content;
    }
}

@mixin query($size) {
    @media all and (max-width: $size + px) {
        @content;
    }
}

@mixin sprite-width($sprite, $scale: 1) {
    width: nth($sprite, 5) * $scale;
}

@mixin sprite-height($sprite, $scale: 1) {
    height: nth($sprite, 6) * $scale;
}

@mixin sprite-position($sprite, $scale: 1) {
    $sprite-offset-x: nth($sprite, 3) * $scale;
    $sprite-offset-y: nth($sprite, 4) * $scale;
    background-position: $sprite-offset-x $sprite-offset-y;
}

@mixin sprite-image($sprite) {
    $sprite-image: nth($sprite, 9);
    background-image: url(#{$path_sprite}#{$sprite-image});
    background-repeat: no-repeat;
}

@mixin sprite-size($sprite, $scale: 1) {
    background-size: nth($sprite, 7)*$scale nth($sprite, 8)*$scale;
}

@mixin sprite($sprite, $scale: 1) {
    @include sprite-image($sprite);
    @include sprite-position($sprite, $scale);
    @include sprite-width($sprite, $scale);
    @include sprite-height($sprite, $scale);
    @include sprite-size($sprite, $scale);
}
